plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok:1.18.20'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
	compileOnly("org.springframework.boot:spring-boot-devtools")
	implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.2.0'
	implementation 'org.apache.maven.plugins:maven-surefire-plugin:3.1.2'
	implementation 'org.apache.maven.plugins:maven-surefire-report-plugin:3.0.0-M8'
	implementation 'org.apache.maven.plugins:maven-site-plugin:3.11.0'
	implementation 'org.jacoco:jacoco-maven-plugin:0.8.8'
	implementation 'com.github.javafaker:javafaker:1.0.2'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
}
test {
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
}
tasks.named('test') {
	useJUnitPlatform()
}
